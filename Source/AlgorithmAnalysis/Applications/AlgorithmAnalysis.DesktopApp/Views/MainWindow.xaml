<Window x:Class="AlgorithmAnalysis.DesktopApp.Views.MainWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:viewModels="clr-namespace:AlgorithmAnalysis.DesktopApp.ViewModels"
        xmlns:domain="clr-namespace:AlgorithmAnalysis.DesktopApp.Domain"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Title="{Binding Path=Title, Mode=OneWay}"
        Height="512"
        Width="512"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Background="Black"
        Foreground="White"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        prism:ViewModelLocator.AutoWireViewModel="True">

    <Window.Resources>
        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
                <Trigger Property="Validation.HasError" Value="false">
                    <Setter Property="ToolTip"
                            Value="Valid value."/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button"
               x:Key="CommandButtonStyle">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>
    </Window.Resources>

    <Grid VerticalAlignment="Stretch"
          HorizontalAlignment="Stretch"
          IsEnabled="{Binding Path=CanExecuteAnalysis}">

        <StackPanel VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <StackPanel Margin="10"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                <TextBlock Text="Analysis parameters:"
                           Padding="0 10 0 10"
                           HorizontalAlignment="Center"
                           FontWeight="Bold" />

                <TextBlock Text="Analysis kind for phase one part one"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <ComboBox HorizontalAlignment="Center"
                          MinWidth="350"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AvailableAnalysisKindForPhaseOnePartOne}"
                          SelectedItem="{Binding Path=Parameters.SelectedPhaseOnePartOne}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBlock Text="Analysis kind for phase one part two"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <ComboBox HorizontalAlignment="Center"
                          MinWidth="350"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AvailableAnalysisKindForPhaseOnePartTwo}"
                          SelectedItem="{Binding Path=Parameters.SelectedPhaseOnePartTwo}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBlock Text="Algorithm"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <ComboBox HorizontalAlignment="Center"
                          MinWidth="350"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AvailableAlgorithms}"
                          SelectedItem="{Binding Path=Parameters.SelectedAlgorithmType}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBlock Text="First value of segment"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <TextBox Style="{StaticResource ResourceKey=TextBoxInError}">
                    <TextBox.Text>
                        <Binding Path="Parameters.StartValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <domain:NumberValidation ValidationStep="UpdatedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Text="Last value of segment"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <TextBox Style="{StaticResource ResourceKey=TextBoxInError}">
                    <TextBox.Text>
                        <Binding Path="Parameters.EndValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <domain:NumberValidation ValidationStep="UpdatedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Text="Launches number"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <TextBox Style="{StaticResource ResourceKey=TextBoxInError}">
                    <TextBox.Text>
                        <Binding Path="Parameters.LaunchesNumber"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <domain:NumberValidation ValidationStep="UpdatedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Text="Step"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <TextBox Style="{StaticResource ResourceKey=TextBoxInError}">
                    <TextBox.Text>
                        <Binding Path="Parameters.Step"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <domain:NumberValidation ValidationStep="UpdatedValue" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                
                <CheckBox Content="Show analysis window"
                          HorizontalAlignment="Center"
                          Margin="0 14 0 6"
                          IsChecked="{Binding Path=Parameters.ShowAnalysisWindow}"
                          Foreground="White" />
            </StackPanel>

            <StackPanel Width="280">
                <UniformGrid Rows="1"
                             Columns="2">
                    <Button Style="{StaticResource ResourceKey=CommandButtonStyle}"
                            Command="{Binding Path=RunCommand}">
                        Run
                    </Button>
                    <Button Style="{StaticResource ResourceKey=CommandButtonStyle}"
                            Command="{Binding Path=ResetCommand}">
                        Reset
                    </Button>
                </UniformGrid>
            </StackPanel>
        </StackPanel>
    </Grid>

</Window>
