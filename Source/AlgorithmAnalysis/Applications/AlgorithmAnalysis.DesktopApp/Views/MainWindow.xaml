<Window x:Class="AlgorithmAnalysis.DesktopApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:viewModels="clr-namespace:AlgorithmAnalysis.DesktopApp.ViewModels"
        xmlns:validation="clr-namespace:AlgorithmAnalysis.DesktopApp.Domain.Validation"
        xmlns:converters="clr-namespace:AlgorithmAnalysis.DesktopApp.Domain.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Title="{Binding Path=Title, Mode=OneWay}"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        prism:ViewModelLocator.AutoWireViewModel="True">

    <Window.CommandBindings>
        <CommandBinding Command="Copy"
                        Executed="OnCopy" />
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        
            <converters:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid VerticalAlignment="Stretch"
          HorizontalAlignment="Stretch"
          Margin="20"
          IsEnabled="{Binding Path=CanExecuteAnalysis}">

        <StackPanel VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <StackPanel Margin="10"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                <TextBlock Text="Analysis parameters:"
                           Padding="0 10 0 10"
                           HorizontalAlignment="Center"
                           FontWeight="Bold" />

                <ComboBox materialDesign:HintAssist.Hint="Analysis kind for phase one part one"
                          HorizontalAlignment="Center"
                          MinWidth="350"
                          Margin="16"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AnalysisModel.AvailableAnalysisKindForPhaseOnePartOne}"
                          SelectedItem="{Binding Path=Parameters.SelectedPhaseOnePartOne}"
                          Style="{StaticResource ResourceKey=MaterialDesignFloatingHintComboBox}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <ComboBox materialDesign:HintAssist.Hint="Analysis kind for phase one part two"
                          HorizontalAlignment="Center"
                          MinWidth="350"
                          Margin="16"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AnalysisModel.AvailableAnalysisKindForPhaseOnePartTwo}"
                          SelectedItem="{Binding Path=Parameters.SelectedPhaseOnePartTwo}"
                          Style="{StaticResource ResourceKey=MaterialDesignFloatingHintComboBox}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <!-- TODO: reset selected index when implement normal distribution. -->
                <ComboBox materialDesign:HintAssist.Hint="Analysis kind for phase two"
                          HorizontalAlignment="Center"
                          MinWidth="350"
                          Margin="16"
                          SelectedIndex="1"
                          ItemsSource="{Binding Path=AnalysisModel.AvailableAnalysisKindForPhaseTwo}"
                          SelectedItem="{Binding Path=Parameters.SelectedPhaseTwo}"
                          Style="{StaticResource ResourceKey=MaterialDesignFloatingHintComboBox}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <ComboBox materialDesign:HintAssist.Hint="Algorithm"
                          HorizontalAlignment="Center"
                          MinWidth="350"
                          Margin="16"
                          SelectedIndex="0"
                          ItemsSource="{Binding Path=AnalysisModel.AvailableAlgorithms}"
                          SelectedItem="{Binding Path=Parameters.SelectedAlgorithmType}"
                          Style="{StaticResource ResourceKey=MaterialDesignFloatingHintComboBox}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBox x:Name="FirstValueButton"
                         materialDesign:HintAssist.Hint="The first value of function segment to analyze"
                         Margin="16"
                         FontSize="18"
                         MinWidth="350"
                         Style="{DynamicResource ResourceKey=MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Parameters.StartValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberValidationRule ValidationStep="CommittedValue"
                                                                 ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="LastValueButton"
                         materialDesign:HintAssist.Hint="The last value of function segment to analyze"
                         Margin="16"
                         FontSize="18"
                         MinWidth="350"
                         Style="{DynamicResource ResourceKey=MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Parameters.EndValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberValidationRule ValidationStep="CommittedValue"
                                                                 ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="LastExtrapolationValueButton"
                         materialDesign:HintAssist.Hint="The last extrapolation value of function segment to analyze"
                         Margin="16"
                         FontSize="18"
                         MinWidth="350"
                         Style="{DynamicResource ResourceKey=MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Parameters.ExtrapolationSegmentValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberValidationRule ValidationStep="CommittedValue"
                                                                 ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="LaunchesNumberButton"
                         materialDesign:HintAssist.Hint="The initial launches number"
                         Margin="16"
                         FontSize="18"
                         MinWidth="350"
                         Style="{DynamicResource ResourceKey=MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Parameters.LaunchesNumber"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberValidationRule ValidationStep="CommittedValue"
                                                                 ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="StepValueButton"
                         materialDesign:HintAssist.Hint="The size of step for function segment"
                         Margin="16"
                         FontSize="18"
                         MinWidth="350"
                         Style="{DynamicResource ResourceKey=MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Parameters.Step"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberValidationRule ValidationStep="CommittedValue"
                                                                 ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Text="Max degree of parallerism"
                           HorizontalAlignment="Center"
                           Margin="0 7 0 3" />
                <Slider TickPlacement="BottomRight"
                        IsSnapToTickEnabled="True"
                        Minimum="{Binding Path=AnalysisModel.MinDegreeOfParallerism}"
                        Maximum="{Binding Path=AnalysisModel.MaxDegreeOfParallerism}"
                        Value="{Binding Path=Parameters.MaxDegreeOfParallelism}"
                        SmallChange="1"
                        AutoToolTipPlacement="BottomRight"
                        AutoToolTipPrecision="0" />

                <CheckBox Content="Show analysis window"
                          HorizontalAlignment="Center"
                          Margin="0 14 0 6"
                          IsChecked="{Binding Path=Parameters.ShowAnalysisWindow}" />

                <CheckBox Content="Open analysis results"
                          HorizontalAlignment="Center"
                          Margin="0 14 0 6"
                          IsChecked="{Binding Path=AnalysisModel.OpenAnalysisResults}" />
            </StackPanel>

            <StackPanel Width="280">
                <UniformGrid Rows="1"
                             Columns="2">
                    <Button Command="{Binding Path=RunCommand}"
                            Margin="5"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            ToolTip="Run analysis (window will be blocked)">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource ResourceKey=InverseAndBooleansToBooleanConverter}"
                                          Mode="TwoWay">
                                <Binding ElementName="FirstValueButton"
                                         Path="(Validation.HasError)" />
                                <Binding ElementName="LastValueButton"
                                         Path="(Validation.HasError)" />
                                <Binding ElementName="LastExtrapolationValueButton"
                                         Path="(Validation.HasError)" />
                                <Binding ElementName="LaunchesNumberButton"
                                         Path="(Validation.HasError)" />
                                <Binding ElementName="StepValueButton"
                                         Path="(Validation.HasError)" />
                            </MultiBinding>
                        </Button.IsEnabled>
                        Run
                    </Button>
                    <Button Command="{Binding Path=ResetCommand}"
                            Margin="5"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            ToolTip="Reset analysis parameters">
                        Reset
                    </Button>
                </UniformGrid>
            </StackPanel>
        </StackPanel>
    </Grid>

</Window>
